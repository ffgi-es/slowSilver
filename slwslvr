#!/usr/bin/env ruby
require_relative 'lib/lexer'
require_relative 'lib/parser'
require_relative 'lib/generator'

lexer = Lexer.new ARGV.first

tokens = lexer.lex

begin
  ast = Parser.parse tokens
rescue ParseError
  STDERR.puts "parsing error"
  exit 1
end

generator = Generator.new ast

filename = 'tmp'

assembly_file = filename + '.asm'
linking_file = filename + '.o'

File.open(assembly_file, 'w') { |f| f.write(generator.code) }

assembly_compiler = 'nasm -f elf64'

if system("#{assembly_compiler} #{assembly_file}")
  system(`ld -e #{generator.entry_point} #{linking_file}`)
  File.delete linking_file if File.exist? linking_file
end

File.delete assembly_file if File.exist? assembly_file
