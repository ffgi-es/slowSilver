#!/usr/bin/env ruby
require_relative 'lib/Lexer'
require_relative 'lib/Parser'
require_relative 'lib/Generator'

in_file = ARGV.first

tokens = Lexer.lex in_file
ast = Parser.parse tokens
program = Generator.generate_asm ast

filename = "tmp"

assembly_file = filename + ".asm"
linking_file = filename + ".o"

File.open(assembly_file, "w") { |f| f.write(program) }

assembly_compiler = "nasm -f elf64"

if system("#{assembly_compiler} #{assembly_file}")
  system(`ld #{linking_file}`)
  File.delete linking_file if File.exists? linking_file
end

File.delete assembly_file if File.exists? assembly_file
